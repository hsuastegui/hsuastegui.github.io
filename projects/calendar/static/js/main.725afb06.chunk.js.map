{"version":3,"sources":["assets/up-down.svg","assets/next.svg","assets/previous.svg","styles/index.js","styles/colors.js","utils/index.js","styles/fonts.js","components/Calendar/style.js","components/Calendar/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Title","p","Subtitle","span","Button","button","SecondaryButton","Input","InpuText","Selector","format","getCurrentMonth","moment","startOf","getRows","date","days","_range","daysInMonth","getCalendarDays","leadingDays","day","Array","fill","getLeadingDays","total","_concat","_chunk","Roboto","open","Header","prev","next","WeekDays","WeekDay","Row","Day","Bubble","current","selected","week","Calendar","onSelect","useState","currentMonth","setCurrentMonth","selectedDate","setSelectedDate","today","currentDate","year","month","useEffect","handleClick","d","set","getUpdatedDate","onClick","subtract","getPrevMonth","src","previous","alt","add","getNextMonth","map","w","key","r","join","i","defaultProps","App","modalOpen","setModalOpen","upDown","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.725afb06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/up-down.6345581e.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.5ece0c9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/previous.c8181e56.svg\";","import styled from \"styled-components\";\nimport { brightBlue, darkishBlue, powderBlue, white } from \"./colors\";\n\nexport const Container = styled.div`\n  border-radius: 4px;\n  border: solid 2px ${darkishBlue};\n  background-color: ${white};\n  padding: 46px 136px 46px 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.p`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.4;\n  color: ${darkishBlue};\n  margin-bottom: 4px;\n  margin-top: 0;\n`;\n\nexport const Subtitle = styled.span`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${darkishBlue};\n`;\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  background-color: ${brightBlue};\n  text-shadow: 1px 1px 1px rgba(0, 28, 64, 0.25);\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.5;\n  color: ${white};\n  width: 99px;\n  height: 48px;\n  cursor: pointer;\n`;\n\nexport const SecondaryButton = styled.button`\n  background-color: ${powderBlue};\n  border: none;\n  height: 44px;\n  width: 40px;\n  border-top-right-radius: 2px;\n  border-bottom-right-radius: 2px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  cursor: pointer;\n  border-left: 2px solid ${darkishBlue};\n`;\n\nexport const Input = styled.div`\n  width: 245px;\n  border-radius: 4px;\n  border: solid 2px ${darkishBlue};\n  background-color: ${white};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 15px;\n  margin-right: 18px;\n  position: relative;\n`;\n\nexport const InpuText = styled.span`\n  opacity: 0.5;\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 44px;\n  color: ${darkishBlue};\n`;\n\nexport const Selector = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","export const brightBlue = \"#006cfa\";\nexport const darkishBlue = \"#00357c\";\nexport const powderBlue = \"#bfdafd\";\nexport const veryLightBlue = \"#d9e9fe\";\nexport const white = \"#fff\";\n","import _range from \"lodash/range\";\nimport _chunk from \"lodash/chunk\";\nimport _concat from \"lodash/concat\";\nimport moment from \"moment\";\n\nexport const format = \"YYYY-MMMM-D\";\n\nexport const getToday = () => moment().format(format);\n\nexport const getFormattedDate = (date) => moment(date, format);\n\nexport const getUpdatedDate = (date, d) => moment(date).set(\"date\", d);\n\nexport const getCurrentMonth = () => moment().startOf(\"month\").format(format);\n\nexport const getNextMonth = (date) => moment(date).add(1, \"M\").format(format);\n\nexport const getPrevMonth = (date) =>\n  moment(date).subtract(1, \"M\").format(format);\n\nexport const getLeadingDays = (date) => {\n  const days = date.startOf(\"month\").day() - 1;\n  return days > 0 ? Array(days).fill(\"\") : [];\n};\n\nexport const getCalendarDays = (date) => _range(1, date.daysInMonth() + 1);\n\nexport const getRows = (date) => {\n  const days = getCalendarDays(date);\n  const leadingDays = getLeadingDays(date);\n  const total = _concat(leadingDays, days);\n  return _chunk(total, 7);\n};\n","export const Roboto = \"Roboto, sans-serif\";\n","import styled from \"styled-components\";\nimport {\n  veryLightBlue,\n  brightBlue,\n  darkishBlue,\n  white,\n} from \"../../styles/colors\";\nimport { Roboto } from \"../../styles/fonts\";\n\nexport const Container = styled.div`\n  width: 392px;\n  border-radius: 4px;\n  box-shadow: 0 0 32px 0 rgba(0, 53, 124, 0.25);\n  border: solid 2px ${darkishBlue};\n  background-color: ${white};\n  position: absolute;\n  top: 46px;\n  left: -2px;\n  box-sizing: border-box;\n  transition: all ease 0.3s;\n  overflow: hidden;\n  max-height: ${({ open }) => (open ? \"500px\" : 0)};\n  opacity: ${({ open }) => (open ? 1 : 0)};\n`;\n\nexport const Header = styled.div`\n  font-family: ${Roboto};\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.5;\n  color: ${darkishBlue};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 53, 124, 0.25);\n`;\n\nexport const Button = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  height: 58px;\n  width: 42px;\n  border-right: ${({ prev }) =>\n    prev ? \" solid 1px rgba(0, 53, 124, 0.25)\" : \"none\"};\n  border-left: ${({ next }) =>\n    next ? \" solid 1px rgba(0, 53, 124, 0.25)\" : \"none\"};\n`;\n\nexport const WeekDays = styled.div`\n  display: flex;\n  border-bottom: solid 1px rgba(0, 53, 124, 0.25);\n  padding: 16px 0;\n`;\n\nexport const WeekDay = styled.span`\n  font-family: ${Roboto};\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.33;\n  color: ${darkishBlue};\n  flex: 1 1 14.28%;\n  text-align: center;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  border-bottom: solid 1px rgba(0, 53, 124, 0.25);\n  padding: 8px 0;\n`;\n\nexport const Day = styled.div`\n  flex: 0 1 14.28%;\n`;\n\nexport const Bubble = styled.span`\n  display: block;\n  margin: 0 auto;\n  border-radius: 50%;\n  cursor: pointer;\n  font-family: ${Roboto};\n  font-size: 12px;\n  line-height: 32px;\n  width: 32px;\n  text-align: center;\n  font-weight: ${({ current, selected }) => (current || selected ? 700 : 400)};\n  color: ${({ selected }) => (selected ? white : darkishBlue)};\n  background: ${({ selected }) => (selected ? brightBlue : white)};\n\n  &:hover {\n    background: ${({ selected }) => (selected ? brightBlue : veryLightBlue)};\n    font-weight: 700;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport next from \"../../assets/next.svg\";\nimport previous from \"../../assets/previous.svg\";\nimport {\n  getRows,\n  getNextMonth,\n  getPrevMonth,\n  getCurrentMonth,\n  getFormattedDate,\n  getToday,\n  getUpdatedDate,\n  format,\n} from \"../../utils\";\nimport {\n  Container,\n  Day,\n  Bubble,\n  Row,\n  WeekDays,\n  WeekDay,\n  Header,\n  Button,\n} from \"./style\";\n\nconst week = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n\nfunction Calendar({ open, onSelect, selected }) {\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const today = getToday();\n  const currentDate = getFormattedDate(currentMonth);\n  const year = currentDate.year();\n  const month = currentDate.format(\"MMMM\");\n\n  useEffect(() => {\n    if (selected === \"\") {\n      setSelectedDate(\"\");\n      setCurrentMonth(getCurrentMonth());\n    }\n  }, [selected]);\n\n  const handlePrev = () => {\n    setCurrentMonth(getPrevMonth(currentDate));\n  };\n\n  const handleNext = () => {\n    setCurrentMonth(getNextMonth(currentDate));\n  };\n\n  const handleClick = (d) => {\n    const date = getUpdatedDate(currentDate, d);\n    setSelectedDate(date.format(format));\n    onSelect(date.format(\"DD/MM/YYYY\"));\n  };\n\n  return (\n    <Container open={open}>\n      <Header>\n        <Button prev onClick={handlePrev}>\n          <img src={previous} alt=\"previous\" />\n        </Button>\n        <span>\n          {month} {year}\n        </span>\n        <Button next onClick={handleNext}>\n          <img src={next} alt=\"next\" />\n        </Button>\n      </Header>\n      <WeekDays>\n        {week.map((w) => (\n          <WeekDay key={w}>{w}</WeekDay>\n        ))}\n      </WeekDays>\n      {getRows(currentDate).map((r) => (\n        <Row key={r.join(\"\")}>\n          {r.map((d, i) => (\n            <Day key={i}>\n              {d !== \"\" && (\n                <Bubble\n                  onClick={() => {\n                    handleClick(d);\n                  }}\n                  current={today === `${year}-${month}-${d}`}\n                  selected={selectedDate === `${year}-${month}-${d}`}\n                >\n                  {d}\n                </Bubble>\n              )}\n            </Day>\n          ))}\n        </Row>\n      ))}\n    </Container>\n  );\n}\n\nCalendar.defaultProps = {\n  open: false,\n  onSelect: () => {},\n  selected: \"\",\n};\n\nCalendar.propTypes = {\n  open: PropTypes.bool,\n  onSelect: PropTypes.func,\n  selected: PropTypes.string,\n};\nexport default Calendar;\n","import React, { useState } from \"react\";\nimport upDown from \"../../assets/up-down.svg\";\nimport {\n  Container,\n  Title,\n  SecondaryButton,\n  Subtitle,\n  Button,\n  Input,\n  InpuText,\n  Selector,\n} from \"../../styles\";\nimport Calendar from \"../Calendar\";\n\nfunction App() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  const handleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const handleSubmit = () => {\n    setModalOpen(false);\n    setSelectedDate(\"\");\n  };\n\n  return (\n    <Container>\n      <div>\n        <Title>Have you sold subject to contract?</Title>\n        <Subtitle>\n          Enter your exchange date to unlock the tools you need for the next\n          stage of your sale.\n        </Subtitle>\n      </div>\n      <Selector>\n        <Input>\n          <InpuText selected={selectedDate}>\n            {selectedDate ? selectedDate : \"Please select\"}\n          </InpuText>\n          <SecondaryButton onClick={handleModal}>\n            <img src={upDown} alt=\"up-down\" />\n          </SecondaryButton>\n          <Calendar\n            onSelect={setSelectedDate}\n            open={modalOpen}\n            selected={selectedDate}\n          />\n        </Input>\n        <Button onClick={handleSubmit}>Submit</Button>\n      </Selector>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}